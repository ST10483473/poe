/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package quickchat;



import javax.swing.JOptionPane;
import java.util.*;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author 43324
 */
public class quickchat2 extends javax.swing.JFrame {
   private int messageLimit = 250;
    private int messagesSent = 0;
    private MessageManager msgManager; // Instance of MessageManager





    public quickchat2() {
        initComponents();
        setTitle("QuickChat");
  chatArea.setText("Welcome to QuickChat.\n");
    
    msgManager = new MessageManager();
    
    // Attach send button action
    jButton1.addActionListener(e -> sendMessage());

        String input = JOptionPane.showInputDialog(this, "How many messages would you like to send?");
        try {
            messageLimit = Integer.parseInt(input);
        } catch (NumberFormatException e) {
            messageLimit = 1;
            System.out.println("Invalid input. Defaulting to 1 message.");
        }

        // Initialize MessageManager
   msgManager = new MessageManager();

// Attach send button action
jButton1.addActionListener(e -> sendMessage());
    }

    public void sendMessage() {
        if (messagesSent >= messageLimit) {
            System.out.println("Message limit reached.");
            return;
        }

        // Ask for Message ID
        String messageID = JOptionPane.showInputDialog("Enter Message ID (max 10 characters):");
        if (messageID == null || messageID.length() > 10) {
            System.out.println("Invalid Message ID.");
            return;
        }

        // Ask for Recipient Cell (must start with "+27" and contain 9 digits after)
        String recipientCell = JOptionPane.showInputDialog("Enter Recipient Phone Number (must start with +27):");
        if (recipientCell == null || !recipientCell.matches("\\+27[0-9]{9}")) { // Must be +27 followed by 9 digits
            System.out.println("Invalid Phone Number. Must start with +27 and have 9 digits.");
            return;
        }

        // Ask for Message Text (Removed JTextField, only uses pop-up)
        String messageText = JOptionPane.showInputDialog("Enter your message:");
        if (messageText == null || messageText.trim().isEmpty()) {
            System.out.println("Error: Message cannot be empty!");
            return;
        }

        // Store message
        msgManager.addMessage(messageText);
        System.out.println("Message ID: " + messageID);
        System.out.println("Recipient Cell: " + recipientCell);
        System.out.println("You: " + messageText);

        // Ask user if they want to save the message
        int option = JOptionPane.showConfirmDialog(null, "Do you want to save this message?", "Save Message", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            msgManager.storeMessage(messageID, recipientCell, messageText);
        } else {
            int deleteOption = JOptionPane.showConfirmDialog(null, "Do you want to delete this message?", "Delete Message", JOptionPane.YES_NO_OPTION);
            if (deleteOption == JOptionPane.YES_OPTION) {
                msgManager.deleteMessage();
            }
        }

        messagesSent++;
    }

    public class MessageManager {
        private Queue<String> messageLog = new LinkedList<>();

        public void addMessage(String message) {
            if (messageLog.size() >= messageLimit) {
                messageLog.poll();
            }
            messageLog.add(message);
        }

        public void storeMessage(String messageID, String recipientCell, String messageText) {
            String json = "{ \"messageID\": \"" + messageID + "\", \"recipient\": \"" + recipientCell + "\", \"text\": \"" + messageText + "\" }";
            addMessage(json);
            System.out.println("Message stored: " + json);
        }

        public void deleteMessage() {
            if (!messageLog.isEmpty()) {
                String deletedMessage = messageLog.poll();
                System.out.println("Deleted message: " + deletedMessage);
            } else {
                System.out.println("No messages to delete.");
            }
        }
    }

    
 
    /**
     * Creates new form quickchat2
     */
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 18)); // NOI18N
        jLabel1.setText("QuickChat");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 204), 1, true));

        chatArea.setBackground(new java.awt.Color(204, 255, 255));
        chatArea.setColumns(20);
        chatArea.setFont(new java.awt.Font("Georgia", 3, 14)); // NOI18N
        chatArea.setForeground(new java.awt.Color(153, 153, 153));
        chatArea.setRows(5);
        jScrollPane1.setViewportView(chatArea);

        jButton1.setText("SEND MESSAGE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Show Recent message");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Quit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("SEND");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addComponent(jButton1)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jButton3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jButton4))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jButton1)
                        .addGap(43, 43, 43)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addComponent(jScrollPane1))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    } public void sendMessage(JTextArea chatArea, JTextField textField) {
    if (messagesSent >= messageLimit) {
        chatArea.append("Message limit reached.\n");
        return;
    }

    // Ask for Message ID, Recipient, and Text
    String messageID = JOptionPane.showInputDialog("Enter Message ID (max 10 characters):");
    if (messageID == null || messageID.length() > 10) {
        chatArea.append("Invalid Message ID.\n");
        return;
    }

  String recipientCell = JOptionPane.showInputDialog("Enter Recipient Phone Number (must start with +27):");
if (recipientCell == null || !recipientCell.matches("\\+27[0-9]{9}")) {
    System.out.println("Invalid Phone Number. Must start with +27 and have 9 digits.");
    return;
}



    

   String messageText = JOptionPane.showInputDialog("Enter your message:");
if (messageText == null || messageText.trim().isEmpty()) {
    System.out.println("Error: Message cannot be empty!");
    return;
}

    

    // Use MessageManager instance to store the message
    msgManager.addMessage(messageText);
    chatArea.append("Message ID: " + messageID + "\n");
    chatArea.append("Recipient Cell: " + recipientCell + "\n");
    chatArea.append("You: " + messageText + "\n");

    // Ask user if they want to save the message
    int option = JOptionPane.showConfirmDialog(null, "Do you want to save this message?", "Save Message", JOptionPane.YES_NO_OPTION);
if (option == JOptionPane.YES_OPTION) {
    msgManager.storeMessage(messageID, recipientCell, messageText); // Removed chatArea reference
} else {
    // Ask if they want to delete instead
    int deleteOption = JOptionPane.showConfirmDialog(null, "Do you want to delete this message?", "Delete Message", JOptionPane.YES_NO_OPTION);
    if (deleteOption == JOptionPane.YES_OPTION) {
        msgManager.deleteMessage(); // Removed chatArea reference
    }
}

// Removed textField.setText(); since there's no text field anymore
messagesSent++;


    







    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:chatAre
chatArea.append("Coming soon . \n");

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(quickchat2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(quickchat2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(quickchat2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(quickchat2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new quickchat2().setVisible(true);
        });
    
    
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea chatArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
